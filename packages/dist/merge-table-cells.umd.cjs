(function(u,c){typeof exports=="object"&&typeof module<"u"?module.exports=c():typeof define=="function"&&define.amd?define(c):(u=typeof globalThis<"u"?globalThis:u||self,u.mergeTableCells=c())})(this,function(){"use strict";var T=Object.defineProperty;var D=(u,c,p)=>c in u?T(u,c,{enumerable:!0,configurable:!0,writable:!0,value:p}):u[c]=p;var m=(u,c,p)=>D(u,typeof c!="symbol"?c+"":c,p);function u(f,s){const{count:t=0,children:o=new Map}=f.get(s)||{};return f.set(s,{count:t+1,children:o}),f.get(s)}function c(f){const s=[];if(f.length<2)return s;for(let t=0;t<f.length;t++)for(let o=t+1;o<f.length;o++){const h=f.slice(t,o+1);h.length>=2&&s.push(h)}return s.sort((t,o)=>o.length-t.length)}class p{constructor(s){m(this,"mergeKeys",{rowspan:[],colspan:[]});m(this,"alias","_span");const t=Array.isArray(s)?{rowspan:s,colspan:s}:s;this.mergeKeys.rowspan=(t==null?void 0:t.rowspan)||[],this.mergeKeys.colspan=(t==null?void 0:t.colspan)||[]}format(s,t){const{rowspan:o,colspan:h}=this.mergeKeys,b=(n,r)=>{if(typeof t=="function")return t(n,r);for(let l of o){const e=String(n[l]??""),d=String(r[l]??"");if(e!==d)return e.localeCompare(d)}return 0},y=[...s].sort(b),K=y.reduce((n,r)=>(o.reduce((l,e)=>u(l.children||n,r[e]),{}),n),new Map),v=n=>o.reduce((r,l,e)=>(e===0?r.push(K.get(n[l])):r.push(r[e-1].children.get(n[l])),r),[]),M=c(h),w=(n,r)=>{const l={};for(let e of M)if(e.every((i,a)=>{if(a===0)return!0;const g=r[i]===r[e[a-1]];return typeof n[i]=="number"?g&&n[i]>0&&n[i]===n[e[a-1]]:r[i]===r[e[a-1]]})){e.forEach((i,a)=>{l[i]=a===0?e.length:0});break}return l};return y.map((n,r,l)=>{const e={rowspan:{},colspan:{}},d=v(n);if(r===0)return o.forEach((a,g)=>{e.rowspan[a]=d[g].count}),e.colspan=w(e.rowspan,n),n[this.alias]=e,n;const i=a=>n[a]===l[r-1][a];return o.reduce((a,g,S)=>{const C=a&&i(g);return e.rowspan[g]=C?0:d[S].count,C},!0),e.colspan=w(e.rowspan,n),n[this.alias]=e,n})}span(s,t){const o=t[this.alias]||{},h={rowspan:1,colspan:1};return Object.keys(h).forEach(b=>{({}).hasOwnProperty.call(o[b]||{},s)&&(h[b]=o[b][s])}),h}}return p});
