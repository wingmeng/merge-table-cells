(function(u,c){typeof exports=="object"&&typeof module<"u"?module.exports=c():typeof define=="function"&&define.amd?define(c):(u=typeof globalThis<"u"?globalThis:u||self,u.mergeTableCells=c())})(this,function(){"use strict";var D=Object.defineProperty;var E=(u,c,p)=>c in u?D(u,c,{enumerable:!0,configurable:!0,writable:!0,value:p}):u[c]=p;var w=(u,c,p)=>E(u,typeof c!="symbol"?c+"":c,p);function u(f,s){const{count:t=0,children:r=new Map}=f.get(s)||{};return f.set(s,{count:t+1,children:r}),f.get(s)}function c(f){const s=[];if(f.length<2)return s;for(let t=0;t<f.length;t++)for(let r=t+1;r<f.length;r++){const h=f.slice(t,r+1);h.length>=2&&s.push(h)}return s.sort((t,r)=>r.length-t.length)}class p{constructor(s){w(this,"mergeKeys",{rowspan:[],colspan:[]});w(this,"alias","_span");const t=Array.isArray(s)?{rowspan:s,colspan:s}:s;this.mergeKeys.rowspan=(t==null?void 0:t.rowspan)||[],this.mergeKeys.colspan=(t==null?void 0:t.colspan)||[]}format(s,t){const{rowspan:r,colspan:h}=this.mergeKeys,g=(n,o)=>{if(typeof t=="function")return t(n,o);for(let a of r){const e=String(n[a]??""),d=String(o[a]??"");if(e!==d)return e.localeCompare(d)}return 0},y=[...s].sort(g),K=y.reduce((n,o)=>(r.reduce((a,e)=>u(a.children||n,o[e]),{}),n),new Map),v=n=>r.reduce((o,a,e)=>(e===0?o.push(K.get(n[a])):o.push(o[e-1].children.get(n[a])),o),[]),M=c(h),m=(n,o)=>{const a={};for(let e of M)if(e.every((i,l)=>l===0?!0:o[i]===o[e[l-1]]&&n[i]>0&&n[i]===n[e[l-1]])){e.forEach((i,l)=>{a[i]=l===0?e.length:0});break}return a};return y.map((n,o,a)=>{const e={rowspan:{},colspan:{}},d=v(n);if(o===0)return r.forEach((l,b)=>{e.rowspan[l]=d[b].count}),e.colspan=m(e.rowspan,n),n[this.alias]=e,n;const i=l=>n[l]===a[o-1][l];return r.reduce((l,b,T)=>{const C=l&&i(b);return e.rowspan[b]=C?0:d[T].count,C},!0),e.colspan=m(e.rowspan,n),n[this.alias]=e,n})}span(s,t){const r=t[this.alias]||{},h={rowspan:1,colspan:1};return Object.keys(h).forEach(g=>{({}).hasOwnProperty.call(r[g]||{},s)&&(h[g]=r[g][s])}),h}}return p});
